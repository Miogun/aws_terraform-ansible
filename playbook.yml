# rnfront
- name: FE react native server setup
  hosts: rnfront
  become: true
  tasks:
    - name: apt update
      apt:
        update_cache: yes

    - name: install nginx
      apt:
        name: nginx
        state: present

    - name: nginx start and enable
      systemd:
        name: nginx
        state: started
        enabled: yes
 
- name: Clone GitHub repository to rnfront server
  hosts: rnfront
  become: yes
  tasks:
    - name: Clone the repository
      git:
        repo: https://github.com/SSGraeG/ssgeco_frontend_01.git
        dest: /home/ubuntu/ssgeco_frontend_01
        version: main

- name: Clone GitHub repository to appservers server
  hosts: appservers
  become: yes
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking
  tasks:
    - name: Define repository URL and destination for ec2-private-instance-1
      set_fact:
        repo_url: "https://github.com/SSGraeG/ssgeco_backend_01.git"
        clone_dest: "/home/ubuntu/ssgeco_backend_01_instance1"
      when: inventory_hostname == "ec2-private-instance-1"

    - name: Define repository URL and destination for ec2-private-instance-2
      set_fact:
        repo_url: "https://github.com/SSGraeG/ssgeco_backend_02.git"
        clone_dest: "/home/ubuntu/ssgeco_backend_02_instance2"
      when: inventory_hostname == "ec2-private-instance-2"
      
    - name: Clone the repository to the appropriate directory
      git:
        repo: "{{ repo_url }}"
        dest: "{{ clone_dest }}"
        version: main

- name: Create and modify ini file and add text instance-1
  hosts: appservers
  become: yes
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking 
  tasks:
    - name: Create the ini file with basic content
      when: inventory_hostname == "ec2-private-instance-1"
      copy:
        dest: /home/ubuntu/ssgeco_frontend_01/file.ini
        content: |
          [section1]
          key1=value1
          key2=value2
        mode: '0644'

    - name: Add more content to the ini file
      when: inventory_hostname == "ec2-private-instance-1"
      lineinfile:
        path: /home/ubuntu/ssgeco_frontend_01/file.ini
        line: "new_key=new_value"
        create: yes

    - name: Add additional text to a txt file
      when: inventory_hostname == "ec2-private-instance-1"
      shell: echo "This is additional text." >> /home/ubuntu/ssgeco_frontend_01/file.txt
      args:
        creates: /home/ubuntu/ssgeco_frontend_01/file.txt

- name: Create and modify ini file and add text instance-2
  hosts: appservers
  become: yes
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking
  tasks:
    - name: Create the ini file with basic content
      when: inventory_hostname == "ec2-private-instance-2"
      copy:
        dest: /home/ubuntu/ssgeco_frontend_02/file.ini
        content: |
          [section1]
          key1=value1
          key2=value2
        mode: '0644'

    - name: Add more content to the ini file
      when: inventory_hostname == "ec2-private-instance-2"
      lineinfile:
        path: /home/ubuntu/ssgeco_frontend_02/file.ini
        line: "new_key=new_value"
        create: yes

    - name: Add additional text to a txt file
      when: inventory_hostname == "ec2-private-instance-2"
      shell: echo "This is additional text." >> /home/ubuntu/ssgeco_frontend_02/file.txt
      args:
        creates: /home/ubuntu/ssgeco_frontend_02/file.txt


# rnfront
# - name: FE react native server setup
#   hosts: rnfront
#   become: true
#   tasks:
#     - name: apt update
#       apt:
#         update_cache: yes

#     - name: install nginx
#       apt:
#         name: nginx
#         state: present

#     - name: nginx start and enable
#       systemd:
#         name: nginx
#         state: started
#         enabled: yes
 
# - name: Clone GitHub repository to rnfront server
#   hosts: rnfront
#   become: yes
#   tasks:
#     - name: Clone the repository
#       git:
#         repo: https://github.com/SSGraeG/ssgeco_frontend_01.git
#         dest: /home/ubuntu/ssgeco_frontend_01
#         version: main

# - name: Clone GitHub repository to appservers server
#   hosts: appservers
#   become: yes
#   tasks:
#     - name: Clone the repository
#       git:
#         repo: https://github.com/SSGraeG/ssgeco_backend_01.git
#         dest: /home/ubuntu/ssgeco_backend_01
#         version: main


# - name: Clone GitHub repository to appservers server
#   hosts: appservers
#   become: yes
#   vars:
#     ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking
#   tasks:
#     - name: Define repository URL and destination for ec2-private-instance-1
#       set_fact:
#         repo_url: "https://github.com/SSGraeG/ssgeco_backend_01.git"
#         clone_dest: "/home/ubuntu/ssgeco_backend_01_instance1"
#       when: inventory_hostname == "ec2-private-instance-1"

#     - name: Define repository URL and destination for ec2-private-instance-2
#       set_fact:
#         repo_url: "https://github.com/SSGraeG/ssgeco_backend_02.git"
#         clone_dest: "/home/ubuntu/ssgeco_backend_02_instance2"
#       when: inventory_hostname == "ec2-private-instance-2"
      
#     - name: Clone the repository to the appropriate directory
#       git:
#         repo: "{{ repo_url }}"
#         dest: "{{ clone_dest }}"
#         version: main

# - name: Create and modify ini file and add text instance-1
#   hosts: appservers
#   become: yes
#   vars:
#     ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking 
#   tasks:
#     - name: Create the ini file with basic content
#       when: inventory_hostname == "ec2-private-instance-1"
#       copy:
#         dest: /path/to/your/file.ini
#         content: |
#           [section1]
#           key1=value1
#           key2=value2
#         mode: '0644'

#     - name: Add more content to the ini file
#       when: inventory_hostname == "ec2-private-instance-1"
#       lineinfile:
#         path: /path/to/your/file.ini
#         line: "new_key=new_value"
#         create: yes

#     - name: Add additional text to a txt file
#       when: inventory_hostname == "ec2-private-instance-1"
#       shell: echo "This is additional text." >> /path/to/your/file.txt
#       args:
#         creates: /path/to/your/file.txt

# - name: Create and modify ini file and add text instance-2
#   hosts: appservers
#   become: yes
#   vars:
#     ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Skip SSH key checking
#   tasks:
#     - name: Create the ini file with basic content
#       when: inventory_hostname == "ec2-private-instance-2"
#       copy:
#         dest: /path/to/your/file.ini
#         content: |
#           [section1]
#           key1=value1
#           key2=value2
#         mode: '0644'

#     - name: Add more content to the ini file
#       when: inventory_hostname == "ec2-private-instance-2"
#       lineinfile:
#         path: /path/to/your/file.ini
#         line: "new_key=new_value"
#         create: yes

#     - name: Add additional text to a txt file
#       when: inventory_hostname == "ec2-private-instance-2"
#       shell: echo "This is additional text." >> /path/to/your/file.txt
#       args:
#         creates: /path/to/your/file.txt


    # "sudo apt update -y",
    # "sudo apt install -y software-properties-common",
    # "sudo add-apt-repository --yes --update ppa:ansible/ansible",
    # "sudo apt install -y ansible",

# # 1 fe
# - hosts: webservers  # 또는 appservers
#   become: yes        # root 권한으로 실행

#   tasks:
#   - name: Git 설치
#     apt:
#       name: git
#       state: present

#   - name: Git Clone
#     git:
#       repo: <레포지토리_URL>
#       dest: /var/www/html  # 원하는 디렉토리로 변경

#   - name: 필요한 파일 설치 (예시: npm install)
#     shell: npm expo install
#     args:
#       chdir: /var/www/html

#   - name: 시작
#     shell: npm expo start
#     args:
#       chdir: /var/www/html


# # 2 be
# - hosts: appservers  # 또는 appservers
#   become: yes        # root 권한으로 실행

#   tasks:
#   - name: Git 설치
#     apt:
#       name: git
#       state: present

#   - name: Git Clone
#     git:
#       repo: <레포지토리_URL>
#       dest: /var/www/html  # 원하는 디렉토리로 변경

#   - name: 필요한 파일 설치 (예시: python3 app.py)
#     shell: python3 app.py
#     args:
#       chdir: /var/www/html

# tasks:
# - name: sudo apt get update
#       git:
#         repo: https://github.com/SSGraeG/ssgeco_frontend_01.git
#         dest: /home/ubuntu/ssgeco_frontend_01
#         version: main  


#  # my-app-bucket
# - name: Download folder from S3
#   hosts: appservers
#   become: true
#   vars:
#     s3_bucket: project-bucket-kksung
#     s3_folder: ASG_CICD-AppUserBE-main
#     local_path: /home/ubuntu/AppUserBE

